name: docker image release

# NOTE: For this action to work, you must enable write permissions in your github repository settings.
# Settings -> Actions -> General. "Workflow Permissions". Select "Read and write permissions".
# If you forget to enable, the action will fail on push with a 401 error. Just re-run the failed action after enabling.

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-rc[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.23.8
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  release-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # all lowercase ghcr registry
      - run: |
         DOCKER_REGISTRY=`echo "${{ env.REGISTRY }}/${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'`
         echo "DOCKER_REGISTRY=$DOCKER_REGISTRY" >> $GITHUB_ENV

         REPO_NAME=`echo "${{ github.repository }}" | awk -F'/' '{print $2}' | tr '[:upper:]' '[:lower:]'`
         echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Parse tag
        id: tag
        run: |
          # v0.0.1
          VERSION=$(echo ${{ github.ref_name }} | sed "s/v//")
          # 0.0.1
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # build and publish package to ghcr (public) with codebase remaining private
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: "latest=false"

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
